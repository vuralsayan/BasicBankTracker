<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>